/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Copy)]
pub struct Struct_geod_geodesic {
    pub a: ::std::os::raw::c_double,
    pub f: ::std::os::raw::c_double,
    pub f1: ::std::os::raw::c_double,
    pub e2: ::std::os::raw::c_double,
    pub ep2: ::std::os::raw::c_double,
    pub n: ::std::os::raw::c_double,
    pub b: ::std::os::raw::c_double,
    pub c2: ::std::os::raw::c_double,
    pub etol2: ::std::os::raw::c_double,
    pub A3x: [::std::os::raw::c_double; 6usize],
    pub C3x: [::std::os::raw::c_double; 15usize],
    pub C4x: [::std::os::raw::c_double; 21usize],
}
impl ::std::clone::Clone for Struct_geod_geodesic {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_geod_geodesic {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_geod_geodesicline {
    pub lat1: ::std::os::raw::c_double,
    pub lon1: ::std::os::raw::c_double,
    pub azi1: ::std::os::raw::c_double,
    pub a: ::std::os::raw::c_double,
    pub f: ::std::os::raw::c_double,
    pub salp1: ::std::os::raw::c_double,
    pub calp1: ::std::os::raw::c_double,
    pub a13: ::std::os::raw::c_double,
    pub s13: ::std::os::raw::c_double,
    pub b: ::std::os::raw::c_double,
    pub c2: ::std::os::raw::c_double,
    pub f1: ::std::os::raw::c_double,
    pub salp0: ::std::os::raw::c_double,
    pub calp0: ::std::os::raw::c_double,
    pub k2: ::std::os::raw::c_double,
    pub ssig1: ::std::os::raw::c_double,
    pub csig1: ::std::os::raw::c_double,
    pub dn1: ::std::os::raw::c_double,
    pub stau1: ::std::os::raw::c_double,
    pub ctau1: ::std::os::raw::c_double,
    pub somg1: ::std::os::raw::c_double,
    pub comg1: ::std::os::raw::c_double,
    pub A1m1: ::std::os::raw::c_double,
    pub A2m1: ::std::os::raw::c_double,
    pub A3c: ::std::os::raw::c_double,
    pub B11: ::std::os::raw::c_double,
    pub B21: ::std::os::raw::c_double,
    pub B31: ::std::os::raw::c_double,
    pub A4: ::std::os::raw::c_double,
    pub B41: ::std::os::raw::c_double,
    pub C1a: [::std::os::raw::c_double; 7usize],
    pub C1pa: [::std::os::raw::c_double; 7usize],
    pub C2a: [::std::os::raw::c_double; 7usize],
    pub C3a: [::std::os::raw::c_double; 6usize],
    pub C4a: [::std::os::raw::c_double; 6usize],
    pub caps: ::std::os::raw::c_uint,
}
impl ::std::clone::Clone for Struct_geod_geodesicline {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_geod_geodesicline {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_geod_polygon {
    pub lat: ::std::os::raw::c_double,
    pub lon: ::std::os::raw::c_double,
    pub lat0: ::std::os::raw::c_double,
    pub lon0: ::std::os::raw::c_double,
    pub A: [::std::os::raw::c_double; 2usize],
    pub P: [::std::os::raw::c_double; 2usize],
    pub polyline: ::std::os::raw::c_int,
    pub crossings: ::std::os::raw::c_int,
    pub num: ::std::os::raw::c_uint,
}
impl ::std::clone::Clone for Struct_geod_polygon {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_geod_polygon {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_geod_mask {
    GEOD_NONE = 0,
    GEOD_LATITUDE = 128,
    GEOD_LONGITUDE = 264,
    GEOD_AZIMUTH = 512,
    GEOD_DISTANCE = 1025,
    GEOD_DISTANCE_IN = 2051,
    GEOD_REDUCEDLENGTH = 4101,
    GEOD_GEODESICSCALE = 8197,
    GEOD_AREA = 16400,
    GEOD_ALL = 32671,
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_geod_flags {
    GEOD_NOFLAGS = 0,
    GEOD_ARCMODE = 1,
    GEOD_LONG_UNROLL = 32768,
}
extern "C" {
    pub fn geod_init(g: *mut Struct_geod_geodesic,
                     a: ::std::os::raw::c_double,
                     f: ::std::os::raw::c_double);
    pub fn geod_direct(g: *const Struct_geod_geodesic,
                       lat1: ::std::os::raw::c_double,
                       lon1: ::std::os::raw::c_double,
                       azi1: ::std::os::raw::c_double,
                       s12: ::std::os::raw::c_double,
                       plat2: *mut ::std::os::raw::c_double,
                       plon2: *mut ::std::os::raw::c_double,
                       pazi2: *mut ::std::os::raw::c_double);
    pub fn geod_gendirect(g: *const Struct_geod_geodesic,
                          lat1: ::std::os::raw::c_double,
                          lon1: ::std::os::raw::c_double,
                          azi1: ::std::os::raw::c_double,
                          flags: ::std::os::raw::c_uint,
                          s12_a12: ::std::os::raw::c_double,
                          plat2: *mut ::std::os::raw::c_double,
                          plon2: *mut ::std::os::raw::c_double,
                          pazi2: *mut ::std::os::raw::c_double,
                          ps12: *mut ::std::os::raw::c_double,
                          pm12: *mut ::std::os::raw::c_double,
                          pM12: *mut ::std::os::raw::c_double,
                          pM21: *mut ::std::os::raw::c_double,
                          pS12: *mut ::std::os::raw::c_double)
     -> ::std::os::raw::c_double;
    pub fn geod_inverse(g: *const Struct_geod_geodesic,
                        lat1: ::std::os::raw::c_double,
                        lon1: ::std::os::raw::c_double,
                        lat2: ::std::os::raw::c_double,
                        lon2: ::std::os::raw::c_double,
                        ps12: *mut ::std::os::raw::c_double,
                        pazi1: *mut ::std::os::raw::c_double,
                        pazi2: *mut ::std::os::raw::c_double);
    pub fn geod_geninverse(g: *const Struct_geod_geodesic,
                           lat1: ::std::os::raw::c_double,
                           lon1: ::std::os::raw::c_double,
                           lat2: ::std::os::raw::c_double,
                           lon2: ::std::os::raw::c_double,
                           ps12: *mut ::std::os::raw::c_double,
                           pazi1: *mut ::std::os::raw::c_double,
                           pazi2: *mut ::std::os::raw::c_double,
                           pm12: *mut ::std::os::raw::c_double,
                           pM12: *mut ::std::os::raw::c_double,
                           pM21: *mut ::std::os::raw::c_double,
                           pS12: *mut ::std::os::raw::c_double)
     -> ::std::os::raw::c_double;
    pub fn geod_lineinit(l: *mut Struct_geod_geodesicline,
                         g: *const Struct_geod_geodesic,
                         lat1: ::std::os::raw::c_double,
                         lon1: ::std::os::raw::c_double,
                         azi1: ::std::os::raw::c_double,
                         caps: ::std::os::raw::c_uint);
    pub fn geod_directline(l: *mut Struct_geod_geodesicline,
                           g: *const Struct_geod_geodesic,
                           lat1: ::std::os::raw::c_double,
                           lon1: ::std::os::raw::c_double,
                           azi1: ::std::os::raw::c_double,
                           s12: ::std::os::raw::c_double,
                           caps: ::std::os::raw::c_uint);
    pub fn geod_gendirectline(l: *mut Struct_geod_geodesicline,
                              g: *const Struct_geod_geodesic,
                              lat1: ::std::os::raw::c_double,
                              lon1: ::std::os::raw::c_double,
                              azi1: ::std::os::raw::c_double,
                              flags: ::std::os::raw::c_uint,
                              s12_a12: ::std::os::raw::c_double,
                              caps: ::std::os::raw::c_uint);
    pub fn geod_inverseline(l: *mut Struct_geod_geodesicline,
                            g: *const Struct_geod_geodesic,
                            lat1: ::std::os::raw::c_double,
                            lon1: ::std::os::raw::c_double,
                            lat2: ::std::os::raw::c_double,
                            lon2: ::std::os::raw::c_double,
                            caps: ::std::os::raw::c_uint);
    pub fn geod_position(l: *const Struct_geod_geodesicline,
                         s12: ::std::os::raw::c_double,
                         plat2: *mut ::std::os::raw::c_double,
                         plon2: *mut ::std::os::raw::c_double,
                         pazi2: *mut ::std::os::raw::c_double);
    pub fn geod_genposition(l: *const Struct_geod_geodesicline,
                            flags: ::std::os::raw::c_uint,
                            s12_a12: ::std::os::raw::c_double,
                            plat2: *mut ::std::os::raw::c_double,
                            plon2: *mut ::std::os::raw::c_double,
                            pazi2: *mut ::std::os::raw::c_double,
                            ps12: *mut ::std::os::raw::c_double,
                            pm12: *mut ::std::os::raw::c_double,
                            pM12: *mut ::std::os::raw::c_double,
                            pM21: *mut ::std::os::raw::c_double,
                            pS12: *mut ::std::os::raw::c_double)
     -> ::std::os::raw::c_double;
    pub fn geod_setdistance(l: *mut Struct_geod_geodesicline,
                            s13: ::std::os::raw::c_double);
    pub fn geod_gensetdistance(l: *mut Struct_geod_geodesicline,
                               flags: ::std::os::raw::c_uint,
                               s13_a13: ::std::os::raw::c_double);
    pub fn geod_polygon_init(p: *mut Struct_geod_polygon,
                             polylinep: ::std::os::raw::c_int);
    pub fn geod_polygon_clear(p: *mut Struct_geod_polygon);
    pub fn geod_polygon_addpoint(g: *const Struct_geod_geodesic,
                                 p: *mut Struct_geod_polygon,
                                 lat: ::std::os::raw::c_double,
                                 lon: ::std::os::raw::c_double);
    pub fn geod_polygon_addedge(g: *const Struct_geod_geodesic,
                                p: *mut Struct_geod_polygon,
                                azi: ::std::os::raw::c_double,
                                s: ::std::os::raw::c_double);
    pub fn geod_polygon_compute(g: *const Struct_geod_geodesic,
                                p: *const Struct_geod_polygon,
                                reverse: ::std::os::raw::c_int,
                                sign: ::std::os::raw::c_int,
                                pA: *mut ::std::os::raw::c_double,
                                pP: *mut ::std::os::raw::c_double)
     -> ::std::os::raw::c_uint;
    pub fn geod_polygon_testpoint(g: *const Struct_geod_geodesic,
                                  p: *const Struct_geod_polygon,
                                  lat: ::std::os::raw::c_double,
                                  lon: ::std::os::raw::c_double,
                                  reverse: ::std::os::raw::c_int,
                                  sign: ::std::os::raw::c_int,
                                  pA: *mut ::std::os::raw::c_double,
                                  pP: *mut ::std::os::raw::c_double)
     -> ::std::os::raw::c_uint;
    pub fn geod_polygon_testedge(g: *const Struct_geod_geodesic,
                                 p: *const Struct_geod_polygon,
                                 azi: ::std::os::raw::c_double,
                                 s: ::std::os::raw::c_double,
                                 reverse: ::std::os::raw::c_int,
                                 sign: ::std::os::raw::c_int,
                                 pA: *mut ::std::os::raw::c_double,
                                 pP: *mut ::std::os::raw::c_double)
     -> ::std::os::raw::c_uint;
    pub fn geod_polygonarea(g: *const Struct_geod_geodesic,
                            lats: *mut ::std::os::raw::c_double,
                            lons: *mut ::std::os::raw::c_double,
                            n: ::std::os::raw::c_int,
                            pA: *mut ::std::os::raw::c_double,
                            pP: *mut ::std::os::raw::c_double);
}
